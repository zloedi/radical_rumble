=== Content HOWTO ===

The content for the demo should be checked out in /RadicalRumbleUnity/Assets/Content
Add any new (commercial) content there to stay private.
It is a separate git repo (not submodule) and is .gitignored

notes on event 5

// thinking in terms of single entities vs sets
DrawHealthBar( size, position, ... )

// actually, this is an example of a filter
    vs Draw All Healthbars on filtered entities

// boiler plate code executes once

=== TODO ===

* (GYM) Unit hp decrease and death in the gym version.
] (GYM) Replace the server tick with the gym version.


] (UI) healthbars scripting
    ] adjust sliders to hp (needs GYM stuff)
    * colorize properly
    * adjust healthbar sizes
    * adjust healthbar positions
    * load them ingame
    * script them on top of the units, fixing sizes

] (INP) no input in the Unity client yet.
    ] (INP/UI) should demonstrate some serious shit with dragging though


] (UI) Timer
] (UI) Unit icons with drag and drop
    ] (UI) Spawn Zones
] (UI) interesting mana bar
* (UI) QUI should be able to work with Text Mesh Pro to handle the bought assets.
    actually, TMP and text can sorta co-exist (text being obsolete howerver)
] (UI) Use the lightning icon from PlayType3 panel in the GUI pack for mana
] (UI) make a nice win animation, see the one with the GUI pack
] (UI) show off at least two states (lobby+play)

] (BUG) Fast clicking leads to no-spawn
] (IMP) Binary (compressed) deltas.
] (IMP) Turn the cached pather lists into arrays on cache.
] (IMP) DNS support

] (IMP) Implement button 'ready'/'not ready'

] (IMP) Improve the editor.
] (IMP) Player (not client) reconnect.

] (INPUT) make the spawns to work in 3d too
== Thoughts and prayers ==

Finer state machine
a pawn is either idling, moving (has a valid attack target, lerping along its segment), or attacking.

types of movement:
    pathing
    charge enemy (has directly 'visible' enemy in aggro range)
    avoid teammates

SOA:
    easy copy
    easy delta
    pass around and manipulate only fields with no dependencies
        i.e. overlapping solver can get positions, no need to introduce deps or copy

