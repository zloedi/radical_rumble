chicken_bit 0
cl_frame_sleep 0  // Sleep each frame in milliseconds.
cl_log_clocks 0  // 0 -- no clock cmd logging, 1 -- log only pathologic clocks, 2 -- log all clocks
cl_print_incoming_packets 0  // Print incoming packets: 1 -- some; 2 -- all
cl_print_outgoing_commands False
cl_server_ip_address 127.0.0.1  // Connect to this server for multiplayer.
// 127.0.0.1 -- this is a local game and the host is this machine
// 89.190.193.149 -- raspberry pi server.
cl_state 2
cl_trace_level 1  // 0 -- minimal network logging, 1 -- some network logging, 2 -- detailed network logging, 3 -- full network logging 
config_version 2
draw_skip_pawns False
ed_hex_tracing_variant False
ed_last_saved_map unnamed
ed_state 1
gym_state 0
local_server_always_on False
net_chan_max_packet 1400
net_test_drop_packets 0  // Randomly drop packets for tests.
qgl_char_spacing_x -3
qgl_char_spacing_y 3
qgl_font 0
qon_alpha 0.65  // Alpha blend value of the Qonsole background.
qon_invert_play_y False  // When not using RP the GL coordinates are inverted (always the case in Editor Scene window). Set this to false to use inverted GL in the Play window.
qon_overlay_percent 0  // Part of the screen height occupied by the 'overlay' fading-out lines. If set to zero, Qonsole won't show anything unless Active
qon_print_to_system_log True  // Show the Qonsole output to the system (unity) log too.
qon_scale 1  // Console character size.
qon_show_in_editor 1  // Show the Qonsole in the editor: 0 -- no, 1 -- yes, 2 -- editor only.
qui_debug_show_rects False
show_board_bounds False
sv_bounce_error False  // Send log errors to clients.
sv_bounce_log False  // Send log messages to clients.
sv_last_loaded_map default.map
sv_print_incoming_commands False
sv_print_outgoing_packets False  // Print outgoing packets on game Tick(): 1 -- persistent and non-delta only; 2 -- all
sv_show_avoidance False  // Show structure avoidance debug.
sv_show_charge False  // Show charge lines.
sv_show_paths False  // Show pather lines.
sv_trace_level 1  // 0 -- minimal network logging, 1 -- some network logging, 2 -- detailed network logging, 3 -- full network logging 
bind Alpha1 "cl_spawn Brute" play
bind Alpha2 "cl_spawn Archer" play
bind Alpha3 "cl_spawn Flyer" play
bind Alpha4 "cl_spawn Brute 1" play
bind Alpha5 "cl_spawn Archer 1" play
bind Alpha6 "cl_spawn Flyer 1" play
bind K "cl_kill" play
bind Alpha0 "ed_atk_pos_solver_place 5 1" ed_atk_pos_solver
bind Alpha1 "ed_atk_pos_solver_place 1 0" ed_atk_pos_solver
bind Alpha2 "ed_atk_pos_solver_place 2 0" ed_atk_pos_solver
bind Alpha3 "ed_atk_pos_solver_place 3 0" ed_atk_pos_solver
bind Alpha4 "ed_atk_pos_solver_place 4 0" ed_atk_pos_solver
bind Alpha5 "ed_atk_pos_solver_place 5 0" ed_atk_pos_solver
bind Alpha6 "ed_atk_pos_solver_place 1 1" ed_atk_pos_solver
bind Alpha7 "ed_atk_pos_solver_place 2 1" ed_atk_pos_solver
bind Alpha8 "ed_atk_pos_solver_place 3 1" ed_atk_pos_solver
bind Alpha9 "ed_atk_pos_solver_place 4 1" ed_atk_pos_solver
bind K "ed_atk_pos_solver_remove" ed_atk_pos_solver
bind Alpha1 "rts_spawn 1" gym_rts
bind Alpha2 "rts_spawn 2" gym_rts
bind Alpha3 "rts_spawn 3" gym_rts
bind Mouse0 "rts_pick" gym_rts
bind Mouse1 "rts_order_move" gym_rts
bind F1 "cl_set_state play" 
bind F2 "cl_set_state edit ; ed_set_state pather_test" 
bind F3 "cl_set_state edit ; ed_set_state place_towers" 
bind F4 "cl_set_state edit ; ed_set_state place_turrets" 
bind F5 "cl_set_state edit ; ed_set_state atk_pos_solver" 
bind F6 "cl_set_state edit ; ed_set_state place_terrain" 
bind F7 "cl_set_state gym ; gym_set_state steer" 
